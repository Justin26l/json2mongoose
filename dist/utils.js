"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultCompilerOptions = exports.getGenaratorHeaderComment = exports.getPackageInfo = void 0;
const child_process_1 = __importDefault(require("child_process"));
function getPackageInfo() {
    let globalPackages = {};
    // get local npm package.json
    child_process_1.default.exec('npm list -g --json', (err, stdout, stderr) => {
        if (err) {
            console.log('\x1b[41m%s\x1b[0m', '[ERROR]', 'Failed to execute command: npm list -g --json', err);
            return;
        }
        ;
        try {
            globalPackages = JSON.parse(stdout);
        }
        catch (err) {
            console.error('Failed to parse JSON', err);
        }
    });
    return {
        version: globalPackages.dependencies['very-express'] || "[unknown version]",
        author: globalPackages.author || "justin26l",
    };
}
exports.getPackageInfo = getPackageInfo;
function getGenaratorHeaderComment(depedencies) {
    if (!depedencies) {
        depedencies = '';
    }
    const packageInfo = getPackageInfo();
    return `/* eslint-disable */
/**
 * Generated by json2mongoose@${packageInfo.version} ${depedencies}.
 * DO NOT MODIFY MANUALLY. Instead, modify the source JSONSchema file,
 * and run json2mongoose to regenerate this file.
 * 
 * author: ${packageInfo.author}
 * version: ${packageInfo.version}
 */
`;
}
exports.getGenaratorHeaderComment = getGenaratorHeaderComment;
exports.defaultCompilerOptions = {
    headerComment: getGenaratorHeaderComment(),
};
exports.default = {
    getPackageInfo,
    getGenaratorHeaderComment,
    defaultCompilerOptions: exports.defaultCompilerOptions,
};
